; Copyright (c) 1990-1997 The MITRE Corporation
; 
; Authors: W. M. Farmer, J. D. Guttman, F. J. Thayer
;   
; The MITRE Corporation (MITRE) provides this software to you without
; charge to use, copy, modify or enhance for any legitimate purpose
; provided you reproduce MITRE's copyright notice in any copy or
; derivative work of this software.
; 
; This software is the copyright work of MITRE.  No ownership or other
; proprietary interest in this software is granted you other than what
; is granted in this license.
; 
; Any modification or enhancement of this software must identify the
; part of this software that was modified, by whom and when, and must
; inherit this license including its warranty disclaimers.
; 
; MITRE IS PROVIDING THE PRODUCT "AS IS" AND MAKES NO WARRANTY, EXPRESS
; OR IMPLIED, AS TO THE ACCURACY, CAPABILITY, EFFICIENCY OR FUNCTIONING
; OF THIS SOFTWARE AND DOCUMENTATION.  IN NO EVENT WILL MITRE BE LIABLE
; FOR ANY GENERAL, CONSEQUENTIAL, INDIRECT, INCIDENTAL, EXEMPLARY OR
; SPECIAL DAMAGES, EVEN IF MITRE HAS BEEN ADVISED OF THE POSSIBILITY OF
; SUCH DAMAGES.
; 
; You, at your expense, hereby indemnify and hold harmless MITRE, its
; Board of Trustees, officers, agents and employees, from any and all
; liability or damages to third parties, including attorneys' fees,
; court costs, and other related costs and expenses, arising out of your
; use of this software irrespective of the cause of said liability.
; 
; The export from the United States or the subsequent reexport of this
; software is subject to compliance with United States export control
; and munitions control restrictions.  You agree that in the event you
; seek to export this software or any derivative work thereof, you
; assume full responsibility for obtaining all necessary export licenses
; and approvals and for assuring compliance with applicable reexport
; restrictions.
; 
; 
; 
; COPYRIGHT NOTICE INSERTED: Thu Mar  6 14:25:07 EST 1997



(define (do-hereditary-components proc expr)
  (iterate loop ((expr expr))
    (if (formal-symbol? expr)
	nil
	(block (funcall proc x)
	       (walk #'loop (expression-components expr)))))

(define (relevant-expressions)
  (big-u (map (lambda (x) 
		(append (theory-defined-constants x)
			(theory-recursively-defined-constants x)
			(theory-theorems x)))
	      (theories-in-global-theory-table))))


(define (compound-expression-friends expr)
  (let ((accum (list (expression-alpha-root expr))))
    (let ((em  (retrieve-macete-from-formula expr))
	  (tm (retrieve-transportable-macete-from-formula expr)))
      (if (and em (expression-components (elementary-macete-lhs em)))
	  (push accum (elementary-macete-lhs em)))
      (if (and em (expression-components (elementary-macete-rhs em)))
	  (push accum (elementary-macete-rhs em)))
      
      (if (and tm (expression-components (transportable-macete-lhs tm)))
	  (push accum (transportable-macete-lhs tm)))
      (if (and tm (expression-components (transportable-macete-rhs tm)))
	  (push accum (transportable-macete-rhs tm))))
    accum))


(define (garbage-collect-expressions
